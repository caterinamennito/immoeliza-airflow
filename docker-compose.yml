version: "3"

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  airflow-init:
    image: apache/airflow:2.8.1-python3.11
    depends_on:
      - postgres
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        airflow db upgrade
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com
    restart: on-failure

  airflow-webserver:
    image: apache/airflow:2.8.1-python3.11
    depends_on:
      - airflow-init
      - postgres
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      PYTHONPATH: /opt/airflow
    ports:
      - "8080:8080"
    command: bash -c "pip install catboost scikit-learn && airflow webserver"
    restart: always
    volumes:
      - .:/opt/airflow
      - ./requirements.txt:/requirements.txt

  airflow-scheduler:
    image: apache/airflow:2.8.1-python3.11
    depends_on:
      - airflow-webserver
      - postgres
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      PYTHONPATH: /opt/airflow
    command: bash -c "pip install catboost scikit-learn && airflow scheduler"
    restart: always
    volumes:
      - .:/opt/airflow
      - ./requirements.txt:/requirements.txt

  airflow-worker:
    image: apache/airflow:2.8.1-python3.11
    depends_on:
      - airflow-scheduler
      - postgres
      - redis
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__WEBSERVER__SECRET_KEY: ${AIRFLOW__WEBSERVER__SECRET_KEY}
      PYTHONPATH: /opt/airflow
    command: bash -c "pip install catboost scikit-learn && airflow celery worker"
    restart: always
    volumes:
      - .:/opt/airflow
      - ./requirements.txt:/requirements.txt

  streamlit:
    image: apache/airflow:2.8.1-python3.11
    command: bash -c "pip install streamlit scikit-learn catboost && streamlit run /opt/airflow/app/streamlit_app.py --server.port 8501 --server.address 0.0.0.0"
    ports:
      - "8501:8501"
    volumes:
      - .:/opt/airflow
      - ./requirements.txt:/requirements.txt
    environment:
      PYTHONPATH: /opt/airflow
    depends_on:
      - airflow-webserver

volumes:
  postgres_data:
